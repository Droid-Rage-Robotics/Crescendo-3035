
TODO:
- Update Radios: https://docs.wpilib.org/en/stable/docs/zero-to-robot/step-3/radio-programming.html#prerequisites 
- Heading Direction of Drivetrain after Auto 
- Trapezoid Profile: https://github.com/wpilibsuite/allwpilib/blob/main/wpilibjExamples/src/main/java/edu/wpi/first/wpilibj/examples/elevatortrapezoidprofile/Robot.java
- MAKE ALL HARDWARE INCLUSIN CANCODERS/THORUGH BORE BE DR HARDWARE to force implementation
On ALL Subsystems:
- Have the 2 commands and one protected
- Positions/Velocity
- Min/Max Position
- Check FeedForward/PID calculations
Non Urgent ToDos:
- FIX the Motors in same file from having hte same shuffle board names
- Make and extended Subsystems to have protected instead of private

Extra Ideas:
- Lights: Add lights to have the robot tell us any errors with can, etc; Make LEDs show Errors
- Driver.getGameSpecificMessage()
- SubsystemCheck Command??
- Extension automatically commit any code when pushing code to bot (added it) - need to see if 
- Robot Tracking on Field
- Field Centric Turning
- Changing Shooter Speed According to Distance: InterpolatingMatrixTreeMap
- Limit Switch to the Intake
- Make a DroidRagelib - search how to do it

Test:
- Limelight Tracking AutoAim.java
- Make all of the writes that are not necessary during a match be in a practice only writers (Helps prevent the likelihood of loop overruns)
- does Pathplannerfollow work?
- Test Software Switch on Shuffleboard to see if it work
- Test NamedCommands
- Test CycleTracker: https://docs.wpilib.org/en/stable/docs/software/telemetry/datalog.html; https://www.chiefdelphi.com/t/roborio-wpilib-logging/159434/17
- Test Dpad Resets
Done:
April Tag - https://github.com/Mechanical-Advantage/RobotCode2023/blob/main/src/main/java/org/littletonrobotics/frc2023/subsystems/apriltagvision/AprilTagVision.java#L38






make a framework to make all of the arms to be implemented similairly 


3-11
Make a function that forces all of the subsystems to set a start position in configure telopbuttons
write out which direction the -/+ is on all arms
Download Pathplanner wiht Windows
Seeif you put multiple Commands in one file called Commands that is static like TransferToAmpMech
make all bots in start pos
Redo Shooter Dashboard Stuff
Implement Safe Hardware Encoders
Add IsEnabled Button to all!!!!!
Make the imu update faster
Add PID to climb
battery voltage usage

Notes:
Connecting to Roborio using FileZilla
Host: sftp://roboRIO-3035-frc.local
Username:lvuser
Port:22
Location of SysID Logs: /home/lvuser/logs 
Without any PID, the arm shoudl stay upright, basically sayign that the kg is good
System.out.println("setting command."+ targetPosition.name()); <-- Use this to troubleshoot>
Connect in Pathplanner with Robot: 10.30.35.2
Color
5V - Multi COlor Strip
12V - Single COlor Strip




 // drive.setYawCommand(
        //     switch (DriverStation.getRawAllianceStation()) {
        //         case Unknown -> 0;//180
        //         case Blue1,Blue2,Blue3 -> 0;
        //         case Red1,Red2,Red3 -> 0;
        //     }
        // );


        // testButton.configureSparkMaxMotorBindings(///tmp/hs_err_pid2641.log ï»¿

        //     new SafeCanSparkMax(
        //             25,
        //             MotorType.kBrushless,
        //             true,
        //             IdleMode.Coast,
        //             1,
        //             1,
        //             ShuffleboardValue.create(true, "Claw Intake Is Enabled", Claw.class.getSimpleName())
        //                     .withWidget(BuiltInWidgets.kToggleSwitch)
        //                     .build(),
        //                 ShuffleboardValue.create(0.0, "Claw Intake Voltage", Claw.class.getSimpleName())
        //                     .build()
        //         )
        // );

        // testButton.configureTalonMotorBindings(
        //     new SafeTalonFX(
        //     16,
        //     true,
        //     IdleMode.Coast,
        //     1,
        //     1,
        //     ShuffleboardValue.create(true, "Is Enabled Wheel", Intake.class.getSimpleName())
        //         .withWidget(BuiltInWidgets.kToggleSwitch)
        //         .build(),
        //     ShuffleboardValue.create(0.0, "Voltage Wheel", Intake.class.getSimpleName())
        //         .build()
        // )
        // );

        
        // testButton.configureDriverOperatorBindings(drive,intake);
        // testButton.configureCycleTrackerBindings(cycleTracker);

        // testButton.configureClimbTestBindings(climb, intake);
        // testButton.configureIntakeAndShooterTestBindings(intake, shooter);
        // testButton.configureShooterTestBindings(shooter);


        // testButton.configureDriveBindings(drive);
        // testButton.configureSysIDBindings(sysID);
        // testButton.configureAmpMechTestBindings(ampMech);